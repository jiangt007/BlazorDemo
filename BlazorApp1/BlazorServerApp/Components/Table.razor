@typeparam TItem
<table>
    <thead>
    <tr>
        @HeaderTemplate
    </tr>
    </thead>
    <tbody>
    @if (Items is null)
    {
        <tb>Loading</tb>
    }
    else
    {
        foreach (var item in Items)
        {
            <tr> @RowTemplate(item)</tr>
        }
    }
    </tbody>
    <tfoot>
    <tr>
        @FooterTemplate(Items?.Count())
    </tr>
    </tfoot>
</table>

@code
{
    private IEnumerable<TItem>? Items { get; set; }

    [Parameter]
    public RenderFragment? HeaderTemplate { get; set; }

    [Parameter]
    public RenderFragment<int?>? FooterTemplate { get; set; }

    [Parameter]
    public RenderFragment<TItem>? RowTemplate { get; set; }

    [Parameter]
    public Func<IEnumerable<TItem>>? DataChanged { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Items = DataChanged?.Invoke();
            StateHasChanged();
        }
    }
}